name: Flask App CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose
    
    - name: Build App Docker Image
      run: |
        docker-compose -f run/App.docker-compose.yml up --build --abort-on-container-exit
        docker exec -it app flask db migrate && docker exec -it app flask db upgrade

    - name: Run Test Container with Docker Compose
      run: |
        docker-compose -f run/Test.docker-compose.yml up --build --abort-on-container-exit

  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ secrets.DOCKER_USERNAME }}/flask_app_pract_5
        tags: | 
          latest
          v1.${{ github.run_number }}
        labels: |
          org.opencontainers.image.source=${{ github.repository }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: run/App.Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

  # deploy:
  #   name: Deploy to Server
  #   runs-on: ubuntu-latest
  #   needs: build

  #   steps:
  #   - name: Checkout Code
  #     uses: actions/checkout@v3

  #   - name: Deploy Application via SSH
  #     run: |
  #       sshpass -p ${{ secrets.DEPLOY_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
  #         mkdir -p ~/flask_app_4/configs
  #         docker pull ${{ secrets.DOCKER_USERNAME }}/flask_app_4:latest
  #         docker-compose -f ~/flask_app_4/App.docker-compose.yml down || true
  #         docker-compose -f ~/flask_app_4/App.docker-compose.yml up -d
  #       "
