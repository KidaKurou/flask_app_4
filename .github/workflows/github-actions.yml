name: Flask App CI/CD

on:
  push:
    branches:
      - main

jobs:
  test:
    name: Test Application
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15.3-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: flask_db
        options: >-
          --health-cmd="pg_isready -U postgres" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3
      redis:
        image: redis:7-alpine
        options: >-
          --health-cmd="redis-cli ping" 
          --health-interval=10s 
          --health-timeout=5s 
          --health-retries=3

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
    
    - name: Set up Docker Compose
      run: |
        sudo apt-get update
        sudo apt-get install -y docker-compose

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r src/requirements.txt

    - name: Run Tests
      env:
        POSTGRES_HOST: localhost
        POSTGRES_PORT: 5432
        POSTGRES_USER: postgres
        POSTGRES_PASSWORD: postgres
        POSTGRES_DB: flask_db
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        docker-compose -f run/Test.docker-compose.yml up --abort-on-container-exit

  build:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: test

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and Push Docker Image
      uses: docker/build-push-action@v4
      with:
        context: .
        file: run/App.Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/flask_app_4:latest

  deploy:
    name: Deploy to Server
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Deploy Application via SSH
      run: |
        sshpass -p ${{ secrets.DEPLOY_PASSWORD }} ssh -o StrictHostKeyChecking=no ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "
          mkdir -p ~/flask_app_4/configs
          docker pull ${{ secrets.DOCKER_USERNAME }}/flask_app_4:latest
          docker-compose -f ~/flask_app_4/App.docker-compose.yml down || true
          docker-compose -f ~/flask_app_4/App.docker-compose.yml up -d
        "
