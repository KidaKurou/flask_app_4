services:
  app:
    image: flask_app_pract_5/app:latest
    build:
      context: ..
      dockerfile: run/App.Dockerfile
    hostname: app
    expose:
      - 5000
    deploy:
      replicas: 3 # количество экземпляров приложения
    depends_on:
      - db
      - redis
    environment:
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    restart: unless-stopped
    volumes:
      - ./data/app:/app/data

  redis:
    image: redis:7-alpine
    hostname: redis
    environment:
      - CONFFILE=/etc/redis.conf
      - REDIS_DATA_DIR=/data
    ports:
      - 6379:6379
    volumes:
      - ./configs/redis.conf:/etc/redis.conf:ro
    command: ["redis-server", "/etc/redis.conf"]
    restart: unless-stopped

  db:
    image: postgres:13.1-alpine
    hostname: db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: flask_db
    ports:
      - 5432:5432
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped

  nginx:
    image: nginx:latest 
    hostname: nginx
    volumes:
      # Подключаем локальный файл конфигурации Nginx
      - ./configs/nginx.conf:/etc/nginx/nginx.conf:ro
      # - ./data/certbot/etc/letsencrypt/:/etc/letsencrypt/
      # - ./data/certbot/var/www/certbot/:/var/www/certbot/
    ports:
      - 80:80
      # - 443:443
    depends_on:
      - app # Nginx зависит от Flask-приложения
      
  # certbot:
  #   image: certbot/certbot
  #   # command: certbot certonly --webroot -w /var/www/certbot -d gast.exnet.su -d www.gast.exnet.su
  #   volumes:
  #     - ./data/certbot/etc/letsencrypt/:/etc/letsencrypt/
  #     - ./data/certbot/var/www/certbot/:/var/www/certbot/
  
  # prometheus:
  #   image: prom/prometheus:v2.55.1
  #   hostname: prometheus
  #   ports:
  #     - 39090:9090
  #   volumes:
  #     - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #     - ./data/prometheus:/prometheus/data

  # grafana:
  #   image: grafana/grafana:7.5.17
  #   hostname: grafana
  #   restart: always
  #   environment:
  #     TZ: Europe/Moscow
  #     GF_SERVER_ROOT_URL: http://127.0.0.1:3000
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - ./data/grafana:/var/lib/grafana
  #   links:
  #     - prometheus

  # elasticsearch:
  #   image: elasticsearch:7.9.3
  #   environment:
  #     - discovery.type=single-node
  #   ports:
  #     - 9200:9200
  #   volumes:
  #     - ./data/elasticsearch:/usr/share/elasticsearch/data
  # logstash:
  #   image: logstash:7.9.3
  #   volumes:
  #     - ./configs/logstash.conf:/usr/share/logstash/pipeline/logstash.conf
  #   ports:
  #     - 5000:5000

  # kibana:
  #   image: kibana:7.9.3
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elasticsearch

# volumes:
#   db_data:
